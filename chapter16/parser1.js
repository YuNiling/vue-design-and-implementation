// ** 文本模式及其对解析器的影响

// 一. 文本模式：
// ** 1、解析器在工作时所进入的一些特殊状态，如果 RCDATA 模式、CDATA 模式、RAWDATA 模式，以及初始的 DATA 模式等。
// ** 2、在不同模式下，解析器对文本的解析行为会有所不同。

// 二. 文本模式分别有以下四类：
// ** 1、DATA（初始模式）
// **** 1.1、遇到字符 <，切换到“标签开始状态”，即能解析“标签元素”。
// **** 1.2、遇到字符 &，切换到“字符引用状态”，即能解析“HTML 字符实体”。

// ** 2、RCDATA
// **** 2.1、特殊标签：<title>、<textarea>。
// **** 2.2、遇到字符 <，切换到“less-than sign state”。
// **** 2.3、在 2.2 的状态下，遇到字符 /，切换到“结束标签状态”，否则会将当前字符 < 作为普通字符处理，继续处理其他字符，即不能解析“标签元素”。
// **** 2.4、遇到字符 &，切换到“字符引用状态”，即能解析“HTML 字符实体”。

// ** 3、RAWTEXT（工作模式与在 RCDATA 模式下类似）
// **** 3.1、特殊标签：<style>、<xmp>、<iframe>、<noembed>、<noframes>、<noscript>等。
// **** 3.2、不能解析“HTML 字符实体”，会将其当作普通字符处理。
// **** 3.3、Vue.js 的单文件组件的解析器在遇到 <script> 标签时就会进入这个模式，这时它会把 <scrip> 标签内的内容全部作为普通文本处理。
// **** 3.4、不能解析“标签元素”。

// ** 4、CDATA（在 RAWTEXT 模式的基础上更进一步）
// **** 4.1、特殊标签：<![CDATA[字符串。
// **** 4.2、把任何字符都作为普通字符处理，知道遇到 CDATA 的结束标志为止。
// **** 4.3、不能解析“HTML 字符实体”。
// **** 4.4、不能解析“标签元素”。

// 定义文本模式，作为一个状态表
const TextModes = {
  DATA: 'DATA',
  RCDATA: 'RCDATA',
  RAWTEXT: 'RAWTEXT',
  CDATA: 'CDATA'
};